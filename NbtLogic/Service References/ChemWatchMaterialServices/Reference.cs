//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChemSW.Nbt.ChemWatchMaterialServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierInfo", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SupplierInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedCountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedCountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Emergency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Emergency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmergencyOrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUserDefinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Telephone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Telephone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRowsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedCountryId {
            get {
                return this.AssignedCountryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedCountryIdField, value) != true)) {
                    this.AssignedCountryIdField = value;
                    this.RaisePropertyChanged("AssignedCountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedCountryName {
            get {
                return this.AssignedCountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedCountryNameField, value) != true)) {
                    this.AssignedCountryNameField = value;
                    this.RaisePropertyChanged("AssignedCountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emergency1 {
            get {
                return this.Emergency1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Emergency1Field, value) != true)) {
                    this.Emergency1Field = value;
                    this.RaisePropertyChanged("Emergency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emergency2 {
            get {
                return this.Emergency2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Emergency2Field, value) != true)) {
                    this.Emergency2Field = value;
                    this.RaisePropertyChanged("Emergency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmergencyOrganization {
            get {
                return this.EmergencyOrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.EmergencyOrganizationField, value) != true)) {
                    this.EmergencyOrganizationField = value;
                    this.RaisePropertyChanged("EmergencyOrganization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUserDefined {
            get {
                return this.IsUserDefinedField;
            }
            set {
                if ((this.IsUserDefinedField.Equals(value) != true)) {
                    this.IsUserDefinedField = value;
                    this.RaisePropertyChanged("IsUserDefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialIdField, value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialName {
            get {
                return this.MaterialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialNameField, value) != true)) {
                    this.MaterialNameField = value;
                    this.RaisePropertyChanged("MaterialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NID {
            get {
                return this.NIDField;
            }
            set {
                if ((this.NIDField.Equals(value) != true)) {
                    this.NIDField = value;
                    this.RaisePropertyChanged("NID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredName {
            get {
                return this.PreferredNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredNameField, value) != true)) {
                    this.PreferredNameField = value;
                    this.RaisePropertyChanged("PreferredName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone1 {
            get {
                return this.Telephone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Telephone1Field, value) != true)) {
                    this.Telephone1Field = value;
                    this.RaisePropertyChanged("Telephone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone2 {
            get {
                return this.Telephone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Telephone2Field, value) != true)) {
                    this.Telephone2Field = value;
                    this.RaisePropertyChanged("Telephone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRows {
            get {
                return this.TotalRowsField;
            }
            set {
                if ((this.TotalRowsField.Equals(value) != true)) {
                    this.TotalRowsField = value;
                    this.RaisePropertyChanged("TotalRows");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupName {
            get {
                return this.VendorGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupNameField, value) != true)) {
                    this.VendorGroupNameField = value;
                    this.RaisePropertyChanged("VendorGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite {
            get {
                return this.WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteField, value) != true)) {
                    this.WebSiteField = value;
                    this.RaisePropertyChanged("WebSite");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfMaterial", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfMaterial : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Material[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Material[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Material", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Ingredient))]
    public partial class Material : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfstring {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CASNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CWNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] FolderIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FolderNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Ingredient[] IngredientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IngredientsAsDelimitedTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCWGoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.MaterialData MaterialDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PreferredNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SynonymsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CASNumber {
            get {
                return this.CASNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CASNumberField, value) != true)) {
                    this.CASNumberField = value;
                    this.RaisePropertyChanged("CASNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CWNumber {
            get {
                return this.CWNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CWNumberField, value) != true)) {
                    this.CWNumberField = value;
                    this.RaisePropertyChanged("CWNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalUrl {
            get {
                return this.ExternalUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalUrlField, value) != true)) {
                    this.ExternalUrlField = value;
                    this.RaisePropertyChanged("ExternalUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] FolderIds {
            get {
                return this.FolderIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderIdsField, value) != true)) {
                    this.FolderIdsField = value;
                    this.RaisePropertyChanged("FolderIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FolderNames {
            get {
                return this.FolderNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNamesField, value) != true)) {
                    this.FolderNamesField = value;
                    this.RaisePropertyChanged("FolderNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GID {
            get {
                return this.GIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GIDField, value) != true)) {
                    this.GIDField = value;
                    this.RaisePropertyChanged("GID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Ingredient[] Ingredients {
            get {
                return this.IngredientsField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsField, value) != true)) {
                    this.IngredientsField = value;
                    this.RaisePropertyChanged("Ingredients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IngredientsAsDelimitedText {
            get {
                return this.IngredientsAsDelimitedTextField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientsAsDelimitedTextField, value) != true)) {
                    this.IngredientsAsDelimitedTextField = value;
                    this.RaisePropertyChanged("IngredientsAsDelimitedText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCWGold {
            get {
                return this.IsCWGoldField;
            }
            set {
                if ((this.IsCWGoldField.Equals(value) != true)) {
                    this.IsCWGoldField = value;
                    this.RaisePropertyChanged("IsCWGold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.MaterialData MaterialData {
            get {
                return this.MaterialDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialDataField, value) != true)) {
                    this.MaterialDataField = value;
                    this.RaisePropertyChanged("MaterialData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialID {
            get {
                return this.MaterialIDField;
            }
            set {
                if ((this.MaterialIDField.Equals(value) != true)) {
                    this.MaterialIDField = value;
                    this.RaisePropertyChanged("MaterialID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PreferredNames {
            get {
                return this.PreferredNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredNamesField, value) != true)) {
                    this.PreferredNamesField = value;
                    this.RaisePropertyChanged("PreferredNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Synonyms {
            get {
                return this.SynonymsField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymsField, value) != true)) {
                    this.SynonymsField = value;
                    this.RaisePropertyChanged("Synonyms");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityOfstring", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.MaterialBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Material))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Ingredient))]
    public partial class BaseEntityOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseNamedEntityOfstring", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.MaterialBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Material))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Ingredient))]
    public partial class BaseNamedEntityOfstring : ChemSW.Nbt.ChemWatchMaterialServices.BaseEntityOfstring {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MaterialBase", Namespace="")]
    [System.SerializableAttribute()]
    public partial class MaterialBase : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfstring {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialID {
            get {
                return this.MaterialIDField;
            }
            set {
                if ((this.MaterialIDField.Equals(value) != true)) {
                    this.MaterialIDField = value;
                    this.RaisePropertyChanged("MaterialID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredient", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Ingredient : ChemSW.Nbt.ChemWatchMaterialServices.Material {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentMaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProportionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TWAField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((this.OrderNumberField.Equals(value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentMaterialId {
            get {
                return this.ParentMaterialIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentMaterialIdField, value) != true)) {
                    this.ParentMaterialIdField = value;
                    this.RaisePropertyChanged("ParentMaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Proportion {
            get {
                return this.ProportionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProportionField, value) != true)) {
                    this.ProportionField = value;
                    this.RaisePropertyChanged("Proportion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TWA {
            get {
                return this.TWAField;
            }
            set {
                if ((object.ReferenceEquals(this.TWAField, value) != true)) {
                    this.TWAField = value;
                    this.RaisePropertyChanged("TWA");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MaterialData", Namespace="", ItemName="Field")]
    [System.SerializableAttribute()]
    public class MaterialData : System.Collections.Generic.List<ChemSW.Nbt.ChemWatchMaterialServices.Field> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Field", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Field : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChemKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ChemKey {
            get {
                return this.ChemKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ChemKeyField, value) != true)) {
                    this.ChemKeyField = value;
                    this.RaisePropertyChanged("ChemKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FieldIndex {
            get {
                return this.FieldIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldIndexField, value) != true)) {
                    this.FieldIndexField = value;
                    this.RaisePropertyChanged("FieldIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string KeyId {
            get {
                return this.KeyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyIdField, value) != true)) {
                    this.KeyIdField = value;
                    this.RaisePropertyChanged("KeyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ListIndex {
            get {
                return this.ListIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.ListIndexField, value) != true)) {
                    this.ListIndexField = value;
                    this.RaisePropertyChanged("ListIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ListName {
            get {
                return this.ListNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ListNameField, value) != true)) {
                    this.ListNameField = value;
                    this.RaisePropertyChanged("ListName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryBuilderServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Chemwatch.Entities.Sources.QueryBuilder")]
    [System.SerializableAttribute()]
    public partial class QueryBuilderServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query {
            get {
                return this.QueryField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryField, value) != true)) {
                    this.QueryField = value;
                    this.RaisePropertyChanged("Query");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueryId {
            get {
                return this.QueryIdField;
            }
            set {
                if ((this.QueryIdField.Equals(value) != true)) {
                    this.QueryIdField = value;
                    this.RaisePropertyChanged("QueryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueryName {
            get {
                return this.QueryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QueryNameField, value) != true)) {
                    this.QueryNameField = value;
                    this.RaisePropertyChanged("QueryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntrayServiceModel", Namespace="http://schemas.datacontract.org/2004/07/Chemwatch.Entities.Intray")]
    [System.SerializableAttribute()]
    public partial class IntrayServiceModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMaterialsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionId {
            get {
                return this.CollectionIdField;
            }
            set {
                if ((this.CollectionIdField.Equals(value) != true)) {
                    this.CollectionIdField = value;
                    this.RaisePropertyChanged("CollectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionName {
            get {
                return this.CollectionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionNameField, value) != true)) {
                    this.CollectionNameField = value;
                    this.RaisePropertyChanged("CollectionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMaterials {
            get {
                return this.HasMaterialsField;
            }
            set {
                if ((this.HasMaterialsField.Equals(value) != true)) {
                    this.HasMaterialsField = value;
                    this.RaisePropertyChanged("HasMaterials");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlagInfo", Namespace="http://schemas.datacontract.org/2004/07/Chemwatch.Entities.Sources.Materials")]
    [System.SerializableAttribute()]
    public partial class FlagInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlagType {
            get {
                return this.FlagTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagTypeField, value) != true)) {
                    this.FlagTypeField = value;
                    this.RaisePropertyChanged("FlagType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListRequest", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.SearchMaterialsRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.SearchCredoSuggestionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.GeneralSearchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.GetVendorGroupRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.SearchVendorRequest))]
    public partial class ListRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SortField {
            get {
                return this.SortFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.SortFieldField, value) != true)) {
                    this.SortFieldField = value;
                    this.RaisePropertyChanged("SortField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int SortType {
            get {
                return this.SortTypeField;
            }
            set {
                if ((this.SortTypeField.Equals(value) != true)) {
                    this.SortTypeField = value;
                    this.RaisePropertyChanged("SortType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMaterialsRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SearchMaterialsRequest : ChemSW.Nbt.ChemWatchMaterialServices.ListRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CWGoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.SearchParameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExactMatchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderIdField, value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupId {
            get {
                return this.VendorGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupIdField, value) != true)) {
                    this.VendorGroupIdField = value;
                    this.RaisePropertyChanged("VendorGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool Own {
            get {
                return this.OwnField;
            }
            set {
                if ((this.OwnField.Equals(value) != true)) {
                    this.OwnField = value;
                    this.RaisePropertyChanged("Own");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool CWGold {
            get {
                return this.CWGoldField;
            }
            set {
                if ((this.CWGoldField.Equals(value) != true)) {
                    this.CWGoldField = value;
                    this.RaisePropertyChanged("CWGold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public ChemSW.Nbt.ChemWatchMaterialServices.SearchParameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ExactMatch {
            get {
                return this.ExactMatchField;
            }
            set {
                if ((this.ExactMatchField.Equals(value) != true)) {
                    this.ExactMatchField = value;
                    this.RaisePropertyChanged("ExactMatch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchCredoSuggestionRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SearchCredoSuggestionRequest : ChemSW.Nbt.ChemWatchMaterialServices.ListRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DGCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazChemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DGS1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DGS2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingGroup {
            get {
                return this.PackingGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingGroupField, value) != true)) {
                    this.PackingGroupField = value;
                    this.RaisePropertyChanged("PackingGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UN {
            get {
                return this.UNField;
            }
            set {
                if ((object.ReferenceEquals(this.UNField, value) != true)) {
                    this.UNField = value;
                    this.RaisePropertyChanged("UN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string DGC {
            get {
                return this.DGCField;
            }
            set {
                if ((object.ReferenceEquals(this.DGCField, value) != true)) {
                    this.DGCField = value;
                    this.RaisePropertyChanged("DGC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string HazChem {
            get {
                return this.HazChemField;
            }
            set {
                if ((object.ReferenceEquals(this.HazChemField, value) != true)) {
                    this.HazChemField = value;
                    this.RaisePropertyChanged("HazChem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string DGS1 {
            get {
                return this.DGS1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DGS1Field, value) != true)) {
                    this.DGS1Field = value;
                    this.RaisePropertyChanged("DGS1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string DGS2 {
            get {
                return this.DGS2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DGS2Field, value) != true)) {
                    this.DGS2Field = value;
                    this.RaisePropertyChanged("DGS2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralSearchRequest", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.GetVendorGroupRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.SearchVendorRequest))]
    public partial class GeneralSearchRequest : ChemSW.Nbt.ChemWatchMaterialServices.ListRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVendorGroupRequest", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.SearchVendorRequest))]
    public partial class GetVendorGroupRequest : ChemSW.Nbt.ChemWatchMaterialServices.GeneralSearchRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gid {
            get {
                return this.GidField;
            }
            set {
                if ((object.ReferenceEquals(this.GidField, value) != true)) {
                    this.GidField = value;
                    this.RaisePropertyChanged("Gid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupName {
            get {
                return this.VendorGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupNameField, value) != true)) {
                    this.VendorGroupNameField = value;
                    this.RaisePropertyChanged("VendorGroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchVendorRequest", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SearchVendorRequest : ChemSW.Nbt.ChemWatchMaterialServices.GetVendorGroupRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Countries {
            get {
                return this.CountriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CountriesField, value) != true)) {
                    this.CountriesField = value;
                    this.RaisePropertyChanged("Countries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchParameter", Namespace="")]
    [System.SerializableAttribute()]
    public partial class SearchParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfVendor", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfVendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Vendor[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Vendor[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Vendor : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.VendorGroup VendorGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.VendorGroup VendorGroup {
            get {
                return this.VendorGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupField, value) != true)) {
                    this.VendorGroupField = value;
                    this.RaisePropertyChanged("VendorGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupId {
            get {
                return this.VendorGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupIdField, value) != true)) {
                    this.VendorGroupIdField = value;
                    this.RaisePropertyChanged("VendorGroupId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityOflong", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.UserMethodField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.DataVersion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Country))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Template))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.FileSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Language))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.VendorBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Vendor))]
    public partial class BaseEntityOflong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMethodField", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserMethodField : ChemSW.Nbt.ChemWatchMaterialServices.BaseEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FieldTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIncludeToIngredientField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FieldTypeId {
            get {
                return this.FieldTypeIdField;
            }
            set {
                if ((this.FieldTypeIdField.Equals(value) != true)) {
                    this.FieldTypeIdField = value;
                    this.RaisePropertyChanged("FieldTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIncludeToIngredient {
            get {
                return this.IsIncludeToIngredientField;
            }
            set {
                if ((this.IsIncludeToIngredientField.Equals(value) != true)) {
                    this.IsIncludeToIngredientField = value;
                    this.RaisePropertyChanged("IsIncludeToIngredient");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataVersion", Namespace="")]
    [System.SerializableAttribute()]
    public partial class DataVersion : ChemSW.Nbt.ChemWatchMaterialServices.BaseEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CwNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PublishVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CwNo {
            get {
                return this.CwNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CwNoField, value) != true)) {
                    this.CwNoField = value;
                    this.RaisePropertyChanged("CwNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PublishVersion {
            get {
                return this.PublishVersionField;
            }
            set {
                if ((this.PublishVersionField.Equals(value) != true)) {
                    this.PublishVersionField = value;
                    this.RaisePropertyChanged("PublishVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionName {
            get {
                return this.VersionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNameField, value) != true)) {
                    this.VersionNameField = value;
                    this.RaisePropertyChanged("VersionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseNamedEntityOflong", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Country))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Template))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.FileSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Language))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.VendorBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Vendor))]
    public partial class BaseNamedEntityOflong : ChemSW.Nbt.ChemWatchMaterialServices.BaseEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Country : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Template", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Template : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TemplateTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileSource", Namespace="")]
    [System.SerializableAttribute()]
    public partial class FileSource : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="")]
    [System.SerializableAttribute()]
    public partial class File : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSourceId {
            get {
                return this.FileSourceIdField;
            }
            set {
                if ((this.FileSourceIdField.Equals(value) != true)) {
                    this.FileSourceIdField = value;
                    this.RaisePropertyChanged("FileSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMethod", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserMethod : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.UserMethodField[] UserMethodFieldsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.UserMethodField[] UserMethodFields {
            get {
                return this.UserMethodFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMethodFieldsField, value) != true)) {
                    this.UserMethodFieldsField = value;
                    this.RaisePropertyChanged("UserMethodFields");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Language : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageWhenNotObviousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UILanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommonLanguageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIdField, value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageWhenNotObvious {
            get {
                return this.LanguageWhenNotObviousField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageWhenNotObviousField, value) != true)) {
                    this.LanguageWhenNotObviousField = value;
                    this.RaisePropertyChanged("LanguageWhenNotObvious");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool UILanguage {
            get {
                return this.UILanguageField;
            }
            set {
                if ((this.UILanguageField.Equals(value) != true)) {
                    this.UILanguageField = value;
                    this.RaisePropertyChanged("UILanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool CommonLanguage {
            get {
                return this.CommonLanguageField;
            }
            set {
                if ((this.CommonLanguageField.Equals(value) != true)) {
                    this.CommonLanguageField = value;
                    this.RaisePropertyChanged("CommonLanguage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorBase", Namespace="")]
    [System.SerializableAttribute()]
    public partial class VendorBase : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOflong {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorGroup", Namespace="")]
    [System.SerializableAttribute()]
    public partial class VendorGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gid {
            get {
                return this.GidField;
            }
            set {
                if ((object.ReferenceEquals(this.GidField, value) != true)) {
                    this.GidField = value;
                    this.RaisePropertyChanged("Gid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorGroupId {
            get {
                return this.VendorGroupIdField;
            }
            set {
                if ((this.VendorGroupIdField.Equals(value) != true)) {
                    this.VendorGroupIdField = value;
                    this.RaisePropertyChanged("VendorGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupName {
            get {
                return this.VendorGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupNameField, value) != true)) {
                    this.VendorGroupNameField = value;
                    this.RaisePropertyChanged("VendorGroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Supplier : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfint {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Emergency1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Emergency2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Telephone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Telephone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emergency1 {
            get {
                return this.Emergency1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Emergency1Field, value) != true)) {
                    this.Emergency1Field = value;
                    this.RaisePropertyChanged("Emergency1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emergency2 {
            get {
                return this.Emergency2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Emergency2Field, value) != true)) {
                    this.Emergency2Field = value;
                    this.RaisePropertyChanged("Emergency2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NID {
            get {
                return this.NIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NIDField, value) != true)) {
                    this.NIDField = value;
                    this.RaisePropertyChanged("NID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone1 {
            get {
                return this.Telephone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Telephone1Field, value) != true)) {
                    this.Telephone1Field = value;
                    this.RaisePropertyChanged("Telephone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone2 {
            get {
                return this.Telephone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Telephone2Field, value) != true)) {
                    this.Telephone2Field = value;
                    this.RaisePropertyChanged("Telephone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite {
            get {
                return this.WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteField, value) != true)) {
                    this.WebSiteField = value;
                    this.RaisePropertyChanged("WebSite");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityOfint", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.PartNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.PreferredName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Supplier))]
    public partial class BaseEntityOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseNamedEntityOfint", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.PartNumber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.PreferredName))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemSW.Nbt.ChemWatchMaterialServices.Supplier))]
    public partial class BaseNamedEntityOfint : ChemSW.Nbt.ChemWatchMaterialServices.BaseEntityOfint {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartNumber", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PartNumber : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfint {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreferredNamesAssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool PreferredNamesAssigned {
            get {
                return this.PreferredNamesAssignedField;
            }
            set {
                if ((this.PreferredNamesAssignedField.Equals(value) != true)) {
                    this.PreferredNamesAssignedField = value;
                    this.RaisePropertyChanged("PreferredNamesAssigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string VendorGroupName {
            get {
                return this.VendorGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupNameField, value) != true)) {
                    this.VendorGroupNameField = value;
                    this.RaisePropertyChanged("VendorGroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreferredName", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PreferredName : ChemSW.Nbt.ChemWatchMaterialServices.BaseNamedEntityOfint {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumbersAssignedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorGroupName {
            get {
                return this.VendorGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupNameField, value) != true)) {
                    this.VendorGroupNameField = value;
                    this.RaisePropertyChanged("VendorGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool PartNumbersAssigned {
            get {
                return this.PartNumbersAssignedField;
            }
            set {
                if ((this.PartNumbersAssignedField.Equals(value) != true)) {
                    this.PartNumbersAssignedField = value;
                    this.RaisePropertyChanged("PartNumbersAssigned");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoCompleteData", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AutoCompleteData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CasNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CwNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLikeCasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLikeMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLikeSynonymField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SynonymNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SynonymsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CasNumber {
            get {
                return this.CasNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CasNumberField, value) != true)) {
                    this.CasNumberField = value;
                    this.RaisePropertyChanged("CasNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CwNumber {
            get {
                return this.CwNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CwNumberField, value) != true)) {
                    this.CwNumberField = value;
                    this.RaisePropertyChanged("CwNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HCodes {
            get {
                return this.HCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.HCodesField, value) != true)) {
                    this.HCodesField = value;
                    this.RaisePropertyChanged("HCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLikeCas {
            get {
                return this.IsLikeCasField;
            }
            set {
                if ((this.IsLikeCasField.Equals(value) != true)) {
                    this.IsLikeCasField = value;
                    this.RaisePropertyChanged("IsLikeCas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLikeMaterial {
            get {
                return this.IsLikeMaterialField;
            }
            set {
                if ((this.IsLikeMaterialField.Equals(value) != true)) {
                    this.IsLikeMaterialField = value;
                    this.RaisePropertyChanged("IsLikeMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLikeSynonym {
            get {
                return this.IsLikeSynonymField;
            }
            set {
                if ((this.IsLikeSynonymField.Equals(value) != true)) {
                    this.IsLikeSynonymField = value;
                    this.RaisePropertyChanged("IsLikeSynonym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RCodes {
            get {
                return this.RCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.RCodesField, value) != true)) {
                    this.RCodesField = value;
                    this.RaisePropertyChanged("RCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SynonymName {
            get {
                return this.SynonymNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymNameField, value) != true)) {
                    this.SynonymNameField = value;
                    this.RaisePropertyChanged("SynonymName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Synonyms {
            get {
                return this.SynonymsField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymsField, value) != true)) {
                    this.SynonymsField = value;
                    this.RaisePropertyChanged("Synonyms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfCredoSuggestion", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfCredoSuggestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.CredoSuggestion[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.CredoSuggestion[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CredoSuggestion", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CredoSuggestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DGCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HazChemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackingGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubRisk1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubRisk2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggSippingNameestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UNField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DGC {
            get {
                return this.DGCField;
            }
            set {
                if ((object.ReferenceEquals(this.DGCField, value) != true)) {
                    this.DGCField = value;
                    this.RaisePropertyChanged("DGC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HazChem {
            get {
                return this.HazChemField;
            }
            set {
                if ((object.ReferenceEquals(this.HazChemField, value) != true)) {
                    this.HazChemField = value;
                    this.RaisePropertyChanged("HazChem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackingGroup {
            get {
                return this.PackingGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.PackingGroupField, value) != true)) {
                    this.PackingGroupField = value;
                    this.RaisePropertyChanged("PackingGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubRisk1 {
            get {
                return this.SubRisk1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SubRisk1Field, value) != true)) {
                    this.SubRisk1Field = value;
                    this.RaisePropertyChanged("SubRisk1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubRisk2 {
            get {
                return this.SubRisk2Field;
            }
            set {
                if ((object.ReferenceEquals(this.SubRisk2Field, value) != true)) {
                    this.SubRisk2Field = value;
                    this.RaisePropertyChanged("SubRisk2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuggSippingNameestion {
            get {
                return this.SuggSippingNameestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggSippingNameestionField, value) != true)) {
                    this.SuggSippingNameestionField = value;
                    this.RaisePropertyChanged("SuggSippingNameestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UN {
            get {
                return this.UNField;
            }
            set {
                if ((object.ReferenceEquals(this.UNField, value) != true)) {
                    this.UNField = value;
                    this.RaisePropertyChanged("UN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="node", Namespace="")]
    [System.SerializableAttribute()]
    public partial class node : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.children attrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.node[] childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.data dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.children attr {
            get {
                return this.attrField;
            }
            set {
                if ((object.ReferenceEquals(this.attrField, value) != true)) {
                    this.attrField = value;
                    this.RaisePropertyChanged("attr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.node[] children {
            get {
                return this.childrenField;
            }
            set {
                if ((object.ReferenceEquals(this.childrenField, value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.data data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="children", Namespace="")]
    [System.SerializableAttribute()]
    public partial class children : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string catIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int folderFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isTrashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int parentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string catId {
            get {
                return this.catIdField;
            }
            set {
                if ((object.ReferenceEquals(this.catIdField, value) != true)) {
                    this.catIdField = value;
                    this.RaisePropertyChanged("catId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int folderFlags {
            get {
                return this.folderFlagsField;
            }
            set {
                if ((this.folderFlagsField.Equals(value) != true)) {
                    this.folderFlagsField = value;
                    this.RaisePropertyChanged("folderFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasChildren {
            get {
                return this.hasChildrenField;
            }
            set {
                if ((this.hasChildrenField.Equals(value) != true)) {
                    this.hasChildrenField = value;
                    this.RaisePropertyChanged("hasChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                if ((object.ReferenceEquals(this.hrefField, value) != true)) {
                    this.hrefField = value;
                    this.RaisePropertyChanged("href");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isHidden {
            get {
                return this.isHiddenField;
            }
            set {
                if ((this.isHiddenField.Equals(value) != true)) {
                    this.isHiddenField = value;
                    this.RaisePropertyChanged("isHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSystem {
            get {
                return this.isSystemField;
            }
            set {
                if ((this.isSystemField.Equals(value) != true)) {
                    this.isSystemField = value;
                    this.RaisePropertyChanged("isSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTrash {
            get {
                return this.isTrashField;
            }
            set {
                if ((this.isTrashField.Equals(value) != true)) {
                    this.isTrashField = value;
                    this.RaisePropertyChanged("isTrash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parentId {
            get {
                return this.parentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parentIdField, value) != true)) {
                    this.parentIdField = value;
                    this.RaisePropertyChanged("parentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parentType {
            get {
                return this.parentTypeField;
            }
            set {
                if ((this.parentTypeField.Equals(value) != true)) {
                    this.parentTypeField = value;
                    this.RaisePropertyChanged("parentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string permission {
            get {
                return this.permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.permissionField, value) != true)) {
                    this.permissionField = value;
                    this.RaisePropertyChanged("permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="data", Namespace="")]
    [System.SerializableAttribute()]
    public partial class data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                if ((object.ReferenceEquals(this.hrefField, value) != true)) {
                    this.hrefField = value;
                    this.RaisePropertyChanged("href");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                if ((object.ReferenceEquals(this.iconField, value) != true)) {
                    this.iconField = value;
                    this.RaisePropertyChanged("icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FillTemplateRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class FillTemplateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TemplateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TemplateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CWNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> AdditionalParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string TemplateContent {
            get {
                return this.TemplateContentField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateContentField, value) != true)) {
                    this.TemplateContentField = value;
                    this.RaisePropertyChanged("TemplateContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string CWNumber {
            get {
                return this.CWNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CWNumberField, value) != true)) {
                    this.CWNumberField = value;
                    this.RaisePropertyChanged("CWNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<long> LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<long> CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Collections.Generic.Dictionary<string, string> AdditionalParameters {
            get {
                return this.AdditionalParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalParametersField, value) != true)) {
                    this.AdditionalParametersField = value;
                    this.RaisePropertyChanged("AdditionalParameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="Templates", Namespace="", ItemName="Template")]
    [System.SerializableAttribute()]
    public class Templates : System.Collections.Generic.List<ChemSW.Nbt.ChemWatchMaterialServices.Template> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FileSources", Namespace="", ItemName="FileSource")]
    [System.SerializableAttribute()]
    public class FileSources : System.Collections.Generic.List<ChemSW.Nbt.ChemWatchMaterialServices.FileSource> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadTemplateRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UploadTemplateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TemplateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableForAllUsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TemplateType {
            get {
                return this.TemplateTypeField;
            }
            set {
                if ((this.TemplateTypeField.Equals(value) != true)) {
                    this.TemplateTypeField = value;
                    this.RaisePropertyChanged("TemplateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TemplateContent {
            get {
                return this.TemplateContentField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateContentField, value) != true)) {
                    this.TemplateContentField = value;
                    this.RaisePropertyChanged("TemplateContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool AvailableForAllUsers {
            get {
                return this.AvailableForAllUsersField;
            }
            set {
                if ((this.AvailableForAllUsersField.Equals(value) != true)) {
                    this.AvailableForAllUsersField = value;
                    this.RaisePropertyChanged("AvailableForAllUsers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingInfo", Namespace="")]
    [System.SerializableAttribute()]
    public partial class TrackingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[][] FolderIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.node[] NodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[][] FolderIds {
            get {
                return this.FolderIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderIdsField, value) != true)) {
                    this.FolderIdsField = value;
                    this.RaisePropertyChanged("FolderIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.node[] Nodes {
            get {
                return this.NodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodesField, value) != true)) {
                    this.NodesField = value;
                    this.RaisePropertyChanged("Nodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMaterialFilterRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GetMaterialFilterRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> VendorGroupIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VendorGroupId {
            get {
                return this.VendorGroupIdField;
            }
            set {
                if ((this.VendorGroupIdField.Equals(value) != true)) {
                    this.VendorGroupIdField = value;
                    this.RaisePropertyChanged("VendorGroupId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterList", Namespace="")]
    [System.SerializableAttribute()]
    public partial class FilterList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Country[] CountryFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOverWrittenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Language[] LanguageFilterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.Vendor[] VendorFilterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Country[] CountryFilter {
            get {
                return this.CountryFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryFilterField, value) != true)) {
                    this.CountryFilterField = value;
                    this.RaisePropertyChanged("CountryFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOverWritten {
            get {
                return this.IsOverWrittenField;
            }
            set {
                if ((this.IsOverWrittenField.Equals(value) != true)) {
                    this.IsOverWrittenField = value;
                    this.RaisePropertyChanged("IsOverWritten");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Language[] LanguageFilter {
            get {
                return this.LanguageFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageFilterField, value) != true)) {
                    this.LanguageFilterField = value;
                    this.RaisePropertyChanged("LanguageFilter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.Vendor[] VendorFilter {
            get {
                return this.VendorFilterField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorFilterField, value) != true)) {
                    this.VendorFilterField = value;
                    this.RaisePropertyChanged("VendorFilter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilterRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class FilterRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CountryIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsShowOwnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] LanguageIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] VendorGroupIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CountryIds {
            get {
                return this.CountryIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIdsField, value) != true)) {
                    this.CountryIdsField = value;
                    this.RaisePropertyChanged("CountryIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShowOwn {
            get {
                return this.IsShowOwnField;
            }
            set {
                if ((this.IsShowOwnField.Equals(value) != true)) {
                    this.IsShowOwnField = value;
                    this.RaisePropertyChanged("IsShowOwn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] LanguageIds {
            get {
                return this.LanguageIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageIdsField, value) != true)) {
                    this.LanguageIdsField = value;
                    this.RaisePropertyChanged("LanguageIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] VendorGroupIds {
            get {
                return this.VendorGroupIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorGroupIdsField, value) != true)) {
                    this.VendorGroupIdsField = value;
                    this.RaisePropertyChanged("VendorGroupIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDataVersionsRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GetDataVersionsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublishedOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublishedOnly {
            get {
                return this.PublishedOnlyField;
            }
            set {
                if ((this.PublishedOnlyField.Equals(value) != true)) {
                    this.PublishedOnlyField = value;
                    this.RaisePropertyChanged("PublishedOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralResponseOfDataVersions", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GeneralResponseOfDataVersions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.DataVersions ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessageCode {
            get {
                return this.ErrorMessageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageCodeField, value) != true)) {
                    this.ErrorMessageCodeField = value;
                    this.RaisePropertyChanged("ErrorMessageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.DataVersions Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DataVersions", Namespace="", ItemName="DataVersion")]
    [System.SerializableAttribute()]
    public class DataVersions : System.Collections.Generic.List<ChemSW.Nbt.ChemWatchMaterialServices.DataVersion> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateDataVersionRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CreateDataVersionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublishedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateDataVersionRequest", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UpdateDataVersionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataSnapshotIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MaterialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublishedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataSnapshotId {
            get {
                return this.DataSnapshotIdField;
            }
            set {
                if ((this.DataSnapshotIdField.Equals(value) != true)) {
                    this.DataSnapshotIdField = value;
                    this.RaisePropertyChanged("DataSnapshotId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MaterialId {
            get {
                return this.MaterialIdField;
            }
            set {
                if ((this.MaterialIdField.Equals(value) != true)) {
                    this.MaterialIdField = value;
                    this.RaisePropertyChanged("MaterialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivatizedGold", Namespace="")]
    [System.SerializableAttribute()]
    public partial class PrivatizedGold : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfPartNumber", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfPartNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.PartNumber[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.PartNumber[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfPreferredName", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfPreferredName : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChemSW.Nbt.ChemWatchMaterialServices.PreferredName[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemSW.Nbt.ChemWatchMaterialServices.PreferredName[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ChemWatchMaterialServices.IMaterialService")]
    public interface IMaterialService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPrefferedVendorList", ReplyAction="urn:IMaterialService/GetPrefferedVendorListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetPrefferedVendorList(int coutryId, long materialId, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByMaterialId", ReplyAction="urn:IMaterialService/GetMaterialsByMaterialIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByMaterialId(long materialId, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByQuery", ReplyAction="urn:IMaterialService/GetMaterialsByQueryResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByQuery(string xmlString, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/QueryBuilderGetSavedQueries", ReplyAction="urn:IMaterialService/QueryBuilderGetSavedQueriesResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.QueryBuilderServiceModel[] QueryBuilderGetSavedQueries();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/QueryBuilderGetQueryById", ReplyAction="urn:IMaterialService/QueryBuilderGetQueryByIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.QueryBuilderServiceModel QueryBuilderGetQueryById(int queryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/QueryBuilderSaveEditQuery", ReplyAction="urn:IMaterialService/QueryBuilderSaveEditQueryResponse")]
        int QueryBuilderSaveEditQuery(string queryName, string xmlString, System.Nullable<int> queryIdForEdit);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/QueryBuilderDeleteQuery", ReplyAction="urn:IMaterialService/QueryBuilderDeleteQueryResponse")]
        bool QueryBuilderDeleteQuery(int queryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetIntrayCollections", ReplyAction="urn:IMaterialService/GetIntrayCollectionsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.IntrayServiceModel[] GetIntrayCollections(int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SaveIntrayCollection", ReplyAction="urn:IMaterialService/SaveIntrayCollectionResponse")]
        int SaveIntrayCollection(ChemSW.Nbt.ChemWatchMaterialServices.IntrayServiceModel collection);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteIntrayCollection", ReplyAction="urn:IMaterialService/DeleteIntrayCollectionResponse")]
        bool DeleteIntrayCollection(int collectionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByCollectionId", ReplyAction="urn:IMaterialService/GetMaterialsByCollectionIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByCollectionId(int collectionId, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddMaterialToCollection", ReplyAction="urn:IMaterialService/AddMaterialToCollectionResponse")]
        int AddMaterialToCollection(int collectionId, int[] materialIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteMaterialFromCollection", ReplyAction="urn:IMaterialService/DeleteMaterialFromCollectionResponse")]
        bool DeleteMaterialFromCollection(int collectionId, int[] materialIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SaveFlagInfo", ReplyAction="urn:IMaterialService/SaveFlagInfoResponse")]
        void SaveFlagInfo(ChemSW.Nbt.ChemWatchMaterialServices.FlagInfo[] flagInfos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteFlagInfo", ReplyAction="urn:IMaterialService/DeleteFlagInfoResponse")]
        void DeleteFlagInfo(int[] materialIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetFlagInfo", ReplyAction="urn:IMaterialService/GetFlagInfoResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.FlagInfo[] GetFlagInfo(int[] materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/CopyMaterials", ReplyAction="urn:IMaterialService/CopyMaterialsResponse")]
        bool CopyMaterials(int[] entityIds, bool isDocumentIds, int sourceFolderId, int destinationFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/MoveMaterials", ReplyAction="urn:IMaterialService/MoveMaterialsResponse")]
        bool MoveMaterials(int[] entityIds, bool isDocumentIds, int sourceFolderId, int destinationFolderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/RemoveMaterials", ReplyAction="urn:IMaterialService/RemoveMaterialsResponse")]
        bool RemoveMaterials(int[] entityIds, bool isDocumentIds, int folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByVendorId", ReplyAction="urn:IMaterialService/GetMaterialsByVendorIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByVendorId(string vendorId, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByVendorGroupId", ReplyAction="urn:IMaterialService/GetMaterialsByVendorGroupIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByVendorGroupId(string vendorGroupId, string materialName, string partNumber, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SearchVendors", ReplyAction="urn:IMaterialService/SearchVendorsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfVendor SearchVendors(ChemSW.Nbt.ChemWatchMaterialServices.SearchVendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsByFolderId", ReplyAction="urn:IMaterialService/GetMaterialsByFolderIdResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByFolderId(int folderId, int hazzardId, int pageNumber, int pageSize, string sortField, int sortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetSearchAutoComplete", ReplyAction="urn:IMaterialService/GetSearchAutoCompleteResponse")]
        string[] GetSearchAutoComplete(string searchValue, bool isFullDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetSuppliersAutoComplete", ReplyAction="urn:IMaterialService/GetSuppliersAutoCompleteResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.Supplier[] GetSuppliersAutoComplete(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetExtendedAutoComplete", ReplyAction="urn:IMaterialService/GetExtendedAutoCompleteResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoComplete(string searchValue, int count, bool isFullDB, bool generateHCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetExtendedAutoComplete2", ReplyAction="urn:IMaterialService/GetExtendedAutoComplete2Response")]
        ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoComplete2(string searchValue, int count, bool isFullDB, bool generateHCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetExtendedAutoCompleteNew", ReplyAction="urn:IMaterialService/GetExtendedAutoCompleteNewResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoCompleteNew(string searchValue, string casNo, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetVendorAutoComplete", ReplyAction="urn:IMaterialService/GetVendorAutoCompleteResponse")]
        System.Collections.Generic.KeyValuePair<string, string>[] GetVendorAutoComplete(string searchValue, bool isFullDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SearchMaterials", ReplyAction="urn:IMaterialService/SearchMaterialsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial SearchMaterials(ChemSW.Nbt.ChemWatchMaterialServices.SearchMaterialsRequest searchRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SearchCredoSuggestions", ReplyAction="urn:IMaterialService/SearchCredoSuggestionsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfCredoSuggestion SearchCredoSuggestions(ChemSW.Nbt.ChemWatchMaterialServices.SearchCredoSuggestionRequest searchRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetVendorsTree", ReplyAction="urn:IMaterialService/GetVendorsTreeResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.node[] GetVendorsTree(ChemSW.Nbt.ChemWatchMaterialServices.SearchMaterialsRequest searchRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetSearchMaterialsParameters", ReplyAction="urn:IMaterialService/GetSearchMaterialsParametersResponse")]
        string[] GetSearchMaterialsParameters(int level);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMSDS", ReplyAction="urn:IMaterialService/GetMSDSResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.Material GetMSDS(string materialId, string languageId, string countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetLabel", ReplyAction="urn:IMaterialService/GetLabelResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.Material GetLabel(string materialId, string languageId, string countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/FillTemplate", ReplyAction="urn:IMaterialService/FillTemplateResponse")]
        string FillTemplate(ChemSW.Nbt.ChemWatchMaterialServices.FillTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/FillTemplateAsPdf", ReplyAction="urn:IMaterialService/FillTemplateAsPdfResponse")]
        System.IO.Stream FillTemplateAsPdf(ChemSW.Nbt.ChemWatchMaterialServices.FillTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMSDSTemplates", ReplyAction="urn:IMaterialService/GetMSDSTemplatesResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.Templates GetMSDSTemplates();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMSDSTemplateTypes", ReplyAction="urn:IMaterialService/GetMSDSTemplateTypesResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.FileSources GetMSDSTemplateTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteMSDSTemplate", ReplyAction="urn:IMaterialService/DeleteMSDSTemplateResponse")]
        bool DeleteMSDSTemplate(long templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UploadMSDSTemplate", ReplyAction="urn:IMaterialService/UploadMSDSTemplateResponse")]
        long UploadMSDSTemplate(ChemSW.Nbt.ChemWatchMaterialServices.UploadTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdateMSDSTemplate", ReplyAction="urn:IMaterialService/UpdateMSDSTemplateResponse")]
        bool UpdateMSDSTemplate(long templateId, ChemSW.Nbt.ChemWatchMaterialServices.UploadTemplateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DownloadMSDSTemplate", ReplyAction="urn:IMaterialService/DownloadMSDSTemplateResponse")]
        string DownloadMSDSTemplate(long templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMSDSTemplate", ReplyAction="urn:IMaterialService/GetMSDSTemplateResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.Template GetMSDSTemplate(long templateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/FillLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/FillLabelGeneratorTemplateResponse")]
        string FillLabelGeneratorTemplate(string template, string materialId, string languageCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetFilledLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/GetFilledLabelGeneratorTemplateResponse")]
        string GetFilledLabelGeneratorTemplate(long id, string materialId, string languageCode, string countryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetLabelGeneratorStoredTemplateList", ReplyAction="urn:IMaterialService/GetLabelGeneratorStoredTemplateListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.File[] GetLabelGeneratorStoredTemplateList();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/DeleteLabelGeneratorTemplateResponse")]
        bool DeleteLabelGeneratorTemplate(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/GetLabelGeneratorTemplateResponse")]
        string GetLabelGeneratorTemplate(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/CheckDoesLabelGeneratorTemplateExist", ReplyAction="urn:IMaterialService/CheckDoesLabelGeneratorTemplateExistResponse")]
        bool CheckDoesLabelGeneratorTemplateExist(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/StoreLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/StoreLabelGeneratorTemplateResponse")]
        long StoreLabelGeneratorTemplate(string templateName, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdateLabelGeneratorTemplate", ReplyAction="urn:IMaterialService/UpdateLabelGeneratorTemplateResponse")]
        bool UpdateLabelGeneratorTemplate(long templateId, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetTrackMaterialInfo", ReplyAction="urn:IMaterialService/GetTrackMaterialInfoResponse")]
        string[][] GetTrackMaterialInfo(string materialId, bool isIngredientsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPartialMaterialTrackInfo", ReplyAction="urn:IMaterialService/GetPartialMaterialTrackInfoResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.TrackingInfo GetPartialMaterialTrackInfo(string materialId, bool isIngredientsIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/HideUnhideMaterial", ReplyAction="urn:IMaterialService/HideUnhideMaterialResponse")]
        bool HideUnhideMaterial(int[] materialIds, bool setHidden);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetFieldTypes", ReplyAction="urn:IMaterialService/GetFieldTypesResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.node[] GetFieldTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetUserMethods", ReplyAction="urn:IMaterialService/GetUserMethodsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.UserMethod[] GetUserMethods();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetUserMethod", ReplyAction="urn:IMaterialService/GetUserMethodResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.UserMethod GetUserMethod(long methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteUserMethod", ReplyAction="urn:IMaterialService/DeleteUserMethodResponse")]
        bool DeleteUserMethod(long methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/CreateUserMethod", ReplyAction="urn:IMaterialService/CreateUserMethodResponse")]
        long CreateUserMethod(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdateUserMethod", ReplyAction="urn:IMaterialService/UpdateUserMethodResponse")]
        bool UpdateUserMethod(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod method);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddMsdsVendor", ReplyAction="urn:IMaterialService/AddMsdsVendorResponse")]
        long AddMsdsVendor(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetDataByFileType", ReplyAction="urn:IMaterialService/GetDataByFileTypeResponse")]
        string GetDataByFileType(string[] ids, string methodName, int entityType, string languageId, string countryId, bool saveTags, string separator, int fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetData", ReplyAction="urn:IMaterialService/GetDataResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.MaterialData[] GetData(string[] materialIds, string methodName, string languageId, string countryId, bool saveTags, string separator);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetDataByCas", ReplyAction="urn:IMaterialService/GetDataByCasResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.MaterialData[] GetDataByCas(string cas, string methodName, string languageId, string countryId, bool saveTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/ValidateMethodName", ReplyAction="urn:IMaterialService/ValidateMethodNameResponse")]
        bool ValidateMethodName(string methodName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialFilterList", ReplyAction="urn:IMaterialService/GetMaterialFilterListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.FilterList GetMaterialFilterList(ChemSW.Nbt.ChemWatchMaterialServices.GetMaterialFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialVSDSFilterList", ReplyAction="urn:IMaterialService/GetMaterialVSDSFilterListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.FilterList GetMaterialVSDSFilterList(ChemSW.Nbt.ChemWatchMaterialServices.FilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialsSummaryList", ReplyAction="urn:IMaterialService/GetMaterialsSummaryListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.MaterialBase[] GetMaterialsSummaryList(string searchValue, int rowsCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetVendorsSummaryList", ReplyAction="urn:IMaterialService/GetVendorsSummaryListResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.VendorBase[] GetVendorsSummaryList(string searchValue, int rowsCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetCWDocumentId", ReplyAction="urn:IMaterialService/GetCWDocumentIdResponse")]
        long GetCWDocumentId(long materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetDataVersions", ReplyAction="urn:IMaterialService/GetDataVersionsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.GeneralResponseOfDataVersions GetDataVersions(ChemSW.Nbt.ChemWatchMaterialServices.GetDataVersionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/CreateDataVersion", ReplyAction="urn:IMaterialService/CreateDataVersionResponse")]
        void CreateDataVersion(ChemSW.Nbt.ChemWatchMaterialServices.CreateDataVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdateDataVersion", ReplyAction="urn:IMaterialService/UpdateDataVersionResponse")]
        void UpdateDataVersion(ChemSW.Nbt.ChemWatchMaterialServices.UpdateDataVersionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetAllMaterials", ReplyAction="urn:IMaterialService/GetAllMaterialsResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetAllMaterials(ChemSW.Nbt.ChemWatchMaterialServices.ListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialNote", ReplyAction="urn:IMaterialService/GetMaterialNoteResponse")]
        string GetMaterialNote(int materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddUpdateMaterialNote", ReplyAction="urn:IMaterialService/AddUpdateMaterialNoteResponse")]
        bool AddUpdateMaterialNote(int materialId, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/CheckPrivacyGold", ReplyAction="urn:IMaterialService/CheckPrivacyGoldResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.PrivatizedGold CheckPrivacyGold(long materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPartNumbers", ReplyAction="urn:IMaterialService/GetPartNumbersResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPartNumber GetPartNumbers(int materialId, string vendorGroupId, int type, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPartNumbersByPerfName", ReplyAction="urn:IMaterialService/GetPartNumbersByPerfNameResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPartNumber GetPartNumbersByPerfName(int preferredNameId, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddPartNumber", ReplyAction="urn:IMaterialService/AddPartNumberResponse")]
        int AddPartNumber(int materialId, string vendorGroupId, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdatePartNumber", ReplyAction="urn:IMaterialService/UpdatePartNumberResponse")]
        bool UpdatePartNumber(int partNumberId, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/RemovePartNumber", ReplyAction="urn:IMaterialService/RemovePartNumberResponse")]
        bool RemovePartNumber(int partNumberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPreferredNames", ReplyAction="urn:IMaterialService/GetPreferredNamesResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPreferredName GetPreferredNames(int materialId, string vendorGroupId, int type, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetPreferredNamesByPartNumber", ReplyAction="urn:IMaterialService/GetPreferredNamesByPartNumberResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPreferredName GetPreferredNamesByPartNumber(int partNumberId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddPreferredName", ReplyAction="urn:IMaterialService/AddPreferredNameResponse")]
        int AddPreferredName(int materialId, string vendorGroupId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdatePreferredName", ReplyAction="urn:IMaterialService/UpdatePreferredNameResponse")]
        bool UpdatePreferredName(int preferredNameId, string preferredName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/RemovePreferredName", ReplyAction="urn:IMaterialService/RemovePreferredNameResponse")]
        bool RemovePreferredName(int preferredNameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdatePartNumberPreferredNamesReference", ReplyAction="urn:IMaterialService/UpdatePartNumberPreferredNamesReferenceResponse")]
        int UpdatePartNumberPreferredNamesReference(int partNumberId, int[] preferredNameIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/UpdatePreferredNamePartNumbersReference", ReplyAction="urn:IMaterialService/UpdatePreferredNamePartNumbersReferenceResponse")]
        int UpdatePreferredNamePartNumbersReference(int preferredNameId, int[] partNumberIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/RemovePartNumberPreferredNameReference", ReplyAction="urn:IMaterialService/RemovePartNumberPreferredNameReferenceResponse")]
        bool RemovePartNumberPreferredNameReference(int partNumberId, int preferredNameId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetGeneralPrefSupplier", ReplyAction="urn:IMaterialService/GetGeneralPrefSupplierResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo GetGeneralPrefSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/SetGeneralPrefSupplier", ReplyAction="urn:IMaterialService/SetGeneralPrefSupplierResponse")]
        int SetGeneralPrefSupplier(string nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetMaterialPrefSuppliers", ReplyAction="urn:IMaterialService/GetMaterialPrefSuppliersResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetMaterialPrefSuppliers(long materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddMaterialPrefSuppliers", ReplyAction="urn:IMaterialService/AddMaterialPrefSuppliersResponse")]
        int AddMaterialPrefSuppliers(long materialId, long[] supplierIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetSupplierNameAutocomplete", ReplyAction="urn:IMaterialService/GetSupplierNameAutocompleteResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetSupplierNameAutocomplete(string supplierName, string materialId, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddEditUserVendor", ReplyAction="urn:IMaterialService/AddEditUserVendorResponse")]
        long AddEditUserVendor(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplierInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/AddEditPrefSupplier", ReplyAction="urn:IMaterialService/AddEditPrefSupplierResponse")]
        long AddEditPrefSupplier(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplierInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeleteUserDefinedVendor", ReplyAction="urn:IMaterialService/DeleteUserDefinedVendorResponse")]
        int DeleteUserDefinedVendor(long nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/DeletePrefSupplier", ReplyAction="urn:IMaterialService/DeletePrefSupplierResponse")]
        int DeletePrefSupplier(long supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IMaterialService/GetVendorByNid", ReplyAction="urn:IMaterialService/GetVendorByNidResponse")]
        ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo GetVendorByNid(long nid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaterialServiceChannel : ChemSW.Nbt.ChemWatchMaterialServices.IMaterialService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaterialServiceClient : System.ServiceModel.ClientBase<ChemSW.Nbt.ChemWatchMaterialServices.IMaterialService>, ChemSW.Nbt.ChemWatchMaterialServices.IMaterialService {
        
        public MaterialServiceClient() {
        }
        
        public MaterialServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaterialServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaterialServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetPrefferedVendorList(int coutryId, long materialId, int page, int pageSize) {
            return base.Channel.GetPrefferedVendorList(coutryId, materialId, page, pageSize);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByMaterialId(long materialId, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByMaterialId(materialId, isShowOwn, pageNumber, pageSize, sortField, sortType);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByQuery(string xmlString, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByQuery(xmlString, isShowOwn, pageNumber, pageSize, sortField, sortType);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.QueryBuilderServiceModel[] QueryBuilderGetSavedQueries() {
            return base.Channel.QueryBuilderGetSavedQueries();
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.QueryBuilderServiceModel QueryBuilderGetQueryById(int queryId) {
            return base.Channel.QueryBuilderGetQueryById(queryId);
        }
        
        public int QueryBuilderSaveEditQuery(string queryName, string xmlString, System.Nullable<int> queryIdForEdit) {
            return base.Channel.QueryBuilderSaveEditQuery(queryName, xmlString, queryIdForEdit);
        }
        
        public bool QueryBuilderDeleteQuery(int queryId) {
            return base.Channel.QueryBuilderDeleteQuery(queryId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.IntrayServiceModel[] GetIntrayCollections(int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetIntrayCollections(pageNumber, pageSize, sortField, sortType);
        }
        
        public int SaveIntrayCollection(ChemSW.Nbt.ChemWatchMaterialServices.IntrayServiceModel collection) {
            return base.Channel.SaveIntrayCollection(collection);
        }
        
        public bool DeleteIntrayCollection(int collectionId) {
            return base.Channel.DeleteIntrayCollection(collectionId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByCollectionId(int collectionId, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByCollectionId(collectionId, pageNumber, pageSize, sortField, sortType);
        }
        
        public int AddMaterialToCollection(int collectionId, int[] materialIds) {
            return base.Channel.AddMaterialToCollection(collectionId, materialIds);
        }
        
        public bool DeleteMaterialFromCollection(int collectionId, int[] materialIds) {
            return base.Channel.DeleteMaterialFromCollection(collectionId, materialIds);
        }
        
        public void SaveFlagInfo(ChemSW.Nbt.ChemWatchMaterialServices.FlagInfo[] flagInfos) {
            base.Channel.SaveFlagInfo(flagInfos);
        }
        
        public void DeleteFlagInfo(int[] materialIds) {
            base.Channel.DeleteFlagInfo(materialIds);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.FlagInfo[] GetFlagInfo(int[] materialId) {
            return base.Channel.GetFlagInfo(materialId);
        }
        
        public bool CopyMaterials(int[] entityIds, bool isDocumentIds, int sourceFolderId, int destinationFolderId) {
            return base.Channel.CopyMaterials(entityIds, isDocumentIds, sourceFolderId, destinationFolderId);
        }
        
        public bool MoveMaterials(int[] entityIds, bool isDocumentIds, int sourceFolderId, int destinationFolderId) {
            return base.Channel.MoveMaterials(entityIds, isDocumentIds, sourceFolderId, destinationFolderId);
        }
        
        public bool RemoveMaterials(int[] entityIds, bool isDocumentIds, int folderId) {
            return base.Channel.RemoveMaterials(entityIds, isDocumentIds, folderId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByVendorId(string vendorId, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByVendorId(vendorId, isShowOwn, pageNumber, pageSize, sortField, sortType);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByVendorGroupId(string vendorGroupId, string materialName, string partNumber, bool isShowOwn, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByVendorGroupId(vendorGroupId, materialName, partNumber, isShowOwn, pageNumber, pageSize, sortField, sortType);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfVendor SearchVendors(ChemSW.Nbt.ChemWatchMaterialServices.SearchVendorRequest request) {
            return base.Channel.SearchVendors(request);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetMaterialsByFolderId(int folderId, int hazzardId, int pageNumber, int pageSize, string sortField, int sortType) {
            return base.Channel.GetMaterialsByFolderId(folderId, hazzardId, pageNumber, pageSize, sortField, sortType);
        }
        
        public string[] GetSearchAutoComplete(string searchValue, bool isFullDB) {
            return base.Channel.GetSearchAutoComplete(searchValue, isFullDB);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.Supplier[] GetSuppliersAutoComplete(string searchValue) {
            return base.Channel.GetSuppliersAutoComplete(searchValue);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoComplete(string searchValue, int count, bool isFullDB, bool generateHCodes) {
            return base.Channel.GetExtendedAutoComplete(searchValue, count, isFullDB, generateHCodes);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoComplete2(string searchValue, int count, bool isFullDB, bool generateHCodes) {
            return base.Channel.GetExtendedAutoComplete2(searchValue, count, isFullDB, generateHCodes);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.AutoCompleteData[] GetExtendedAutoCompleteNew(string searchValue, string casNo, int count) {
            return base.Channel.GetExtendedAutoCompleteNew(searchValue, casNo, count);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] GetVendorAutoComplete(string searchValue, bool isFullDB) {
            return base.Channel.GetVendorAutoComplete(searchValue, isFullDB);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial SearchMaterials(ChemSW.Nbt.ChemWatchMaterialServices.SearchMaterialsRequest searchRequest) {
            return base.Channel.SearchMaterials(searchRequest);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfCredoSuggestion SearchCredoSuggestions(ChemSW.Nbt.ChemWatchMaterialServices.SearchCredoSuggestionRequest searchRequest) {
            return base.Channel.SearchCredoSuggestions(searchRequest);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.node[] GetVendorsTree(ChemSW.Nbt.ChemWatchMaterialServices.SearchMaterialsRequest searchRequest) {
            return base.Channel.GetVendorsTree(searchRequest);
        }
        
        public string[] GetSearchMaterialsParameters(int level) {
            return base.Channel.GetSearchMaterialsParameters(level);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.Material GetMSDS(string materialId, string languageId, string countryId) {
            return base.Channel.GetMSDS(materialId, languageId, countryId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.Material GetLabel(string materialId, string languageId, string countryId) {
            return base.Channel.GetLabel(materialId, languageId, countryId);
        }
        
        public string FillTemplate(ChemSW.Nbt.ChemWatchMaterialServices.FillTemplateRequest request) {
            return base.Channel.FillTemplate(request);
        }
        
        public System.IO.Stream FillTemplateAsPdf(ChemSW.Nbt.ChemWatchMaterialServices.FillTemplateRequest request) {
            return base.Channel.FillTemplateAsPdf(request);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.Templates GetMSDSTemplates() {
            return base.Channel.GetMSDSTemplates();
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.FileSources GetMSDSTemplateTypes() {
            return base.Channel.GetMSDSTemplateTypes();
        }
        
        public bool DeleteMSDSTemplate(long templateId) {
            return base.Channel.DeleteMSDSTemplate(templateId);
        }
        
        public long UploadMSDSTemplate(ChemSW.Nbt.ChemWatchMaterialServices.UploadTemplateRequest request) {
            return base.Channel.UploadMSDSTemplate(request);
        }
        
        public bool UpdateMSDSTemplate(long templateId, ChemSW.Nbt.ChemWatchMaterialServices.UploadTemplateRequest request) {
            return base.Channel.UpdateMSDSTemplate(templateId, request);
        }
        
        public string DownloadMSDSTemplate(long templateId) {
            return base.Channel.DownloadMSDSTemplate(templateId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.Template GetMSDSTemplate(long templateId) {
            return base.Channel.GetMSDSTemplate(templateId);
        }
        
        public string FillLabelGeneratorTemplate(string template, string materialId, string languageCode, string countryCode) {
            return base.Channel.FillLabelGeneratorTemplate(template, materialId, languageCode, countryCode);
        }
        
        public string GetFilledLabelGeneratorTemplate(long id, string materialId, string languageCode, string countryCode) {
            return base.Channel.GetFilledLabelGeneratorTemplate(id, materialId, languageCode, countryCode);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.File[] GetLabelGeneratorStoredTemplateList() {
            return base.Channel.GetLabelGeneratorStoredTemplateList();
        }
        
        public bool DeleteLabelGeneratorTemplate(long id) {
            return base.Channel.DeleteLabelGeneratorTemplate(id);
        }
        
        public string GetLabelGeneratorTemplate(long id) {
            return base.Channel.GetLabelGeneratorTemplate(id);
        }
        
        public bool CheckDoesLabelGeneratorTemplateExist(string name) {
            return base.Channel.CheckDoesLabelGeneratorTemplateExist(name);
        }
        
        public long StoreLabelGeneratorTemplate(string templateName, string template) {
            return base.Channel.StoreLabelGeneratorTemplate(templateName, template);
        }
        
        public bool UpdateLabelGeneratorTemplate(long templateId, string template) {
            return base.Channel.UpdateLabelGeneratorTemplate(templateId, template);
        }
        
        public string[][] GetTrackMaterialInfo(string materialId, bool isIngredientsIn) {
            return base.Channel.GetTrackMaterialInfo(materialId, isIngredientsIn);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.TrackingInfo GetPartialMaterialTrackInfo(string materialId, bool isIngredientsIn) {
            return base.Channel.GetPartialMaterialTrackInfo(materialId, isIngredientsIn);
        }
        
        public bool HideUnhideMaterial(int[] materialIds, bool setHidden) {
            return base.Channel.HideUnhideMaterial(materialIds, setHidden);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.node[] GetFieldTypes() {
            return base.Channel.GetFieldTypes();
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.UserMethod[] GetUserMethods() {
            return base.Channel.GetUserMethods();
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.UserMethod GetUserMethod(long methodId) {
            return base.Channel.GetUserMethod(methodId);
        }
        
        public bool DeleteUserMethod(long methodId) {
            return base.Channel.DeleteUserMethod(methodId);
        }
        
        public long CreateUserMethod(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod method) {
            return base.Channel.CreateUserMethod(method);
        }
        
        public bool UpdateUserMethod(ChemSW.Nbt.ChemWatchMaterialServices.UserMethod method) {
            return base.Channel.UpdateUserMethod(method);
        }
        
        public long AddMsdsVendor(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplier) {
            return base.Channel.AddMsdsVendor(supplier);
        }
        
        public string GetDataByFileType(string[] ids, string methodName, int entityType, string languageId, string countryId, bool saveTags, string separator, int fileType) {
            return base.Channel.GetDataByFileType(ids, methodName, entityType, languageId, countryId, saveTags, separator, fileType);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.MaterialData[] GetData(string[] materialIds, string methodName, string languageId, string countryId, bool saveTags, string separator) {
            return base.Channel.GetData(materialIds, methodName, languageId, countryId, saveTags, separator);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.MaterialData[] GetDataByCas(string cas, string methodName, string languageId, string countryId, bool saveTags) {
            return base.Channel.GetDataByCas(cas, methodName, languageId, countryId, saveTags);
        }
        
        public bool ValidateMethodName(string methodName) {
            return base.Channel.ValidateMethodName(methodName);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.FilterList GetMaterialFilterList(ChemSW.Nbt.ChemWatchMaterialServices.GetMaterialFilterRequest request) {
            return base.Channel.GetMaterialFilterList(request);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.FilterList GetMaterialVSDSFilterList(ChemSW.Nbt.ChemWatchMaterialServices.FilterRequest request) {
            return base.Channel.GetMaterialVSDSFilterList(request);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.MaterialBase[] GetMaterialsSummaryList(string searchValue, int rowsCount) {
            return base.Channel.GetMaterialsSummaryList(searchValue, rowsCount);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.VendorBase[] GetVendorsSummaryList(string searchValue, int rowsCount) {
            return base.Channel.GetVendorsSummaryList(searchValue, rowsCount);
        }
        
        public long GetCWDocumentId(long materialId) {
            return base.Channel.GetCWDocumentId(materialId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.GeneralResponseOfDataVersions GetDataVersions(ChemSW.Nbt.ChemWatchMaterialServices.GetDataVersionsRequest request) {
            return base.Channel.GetDataVersions(request);
        }
        
        public void CreateDataVersion(ChemSW.Nbt.ChemWatchMaterialServices.CreateDataVersionRequest request) {
            base.Channel.CreateDataVersion(request);
        }
        
        public void UpdateDataVersion(ChemSW.Nbt.ChemWatchMaterialServices.UpdateDataVersionRequest request) {
            base.Channel.UpdateDataVersion(request);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfMaterial GetAllMaterials(ChemSW.Nbt.ChemWatchMaterialServices.ListRequest request) {
            return base.Channel.GetAllMaterials(request);
        }
        
        public string GetMaterialNote(int materialId) {
            return base.Channel.GetMaterialNote(materialId);
        }
        
        public bool AddUpdateMaterialNote(int materialId, string note) {
            return base.Channel.AddUpdateMaterialNote(materialId, note);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.PrivatizedGold CheckPrivacyGold(long materialId) {
            return base.Channel.CheckPrivacyGold(materialId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPartNumber GetPartNumbers(int materialId, string vendorGroupId, int type, int pageNumber, int pageSize) {
            return base.Channel.GetPartNumbers(materialId, vendorGroupId, type, pageNumber, pageSize);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPartNumber GetPartNumbersByPerfName(int preferredNameId, int pageNumber, int pageSize) {
            return base.Channel.GetPartNumbersByPerfName(preferredNameId, pageNumber, pageSize);
        }
        
        public int AddPartNumber(int materialId, string vendorGroupId, string number) {
            return base.Channel.AddPartNumber(materialId, vendorGroupId, number);
        }
        
        public bool UpdatePartNumber(int partNumberId, string number) {
            return base.Channel.UpdatePartNumber(partNumberId, number);
        }
        
        public bool RemovePartNumber(int partNumberId) {
            return base.Channel.RemovePartNumber(partNumberId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPreferredName GetPreferredNames(int materialId, string vendorGroupId, int type, int pageNumber, int pageSize) {
            return base.Channel.GetPreferredNames(materialId, vendorGroupId, type, pageNumber, pageSize);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.ListResultOfPreferredName GetPreferredNamesByPartNumber(int partNumberId) {
            return base.Channel.GetPreferredNamesByPartNumber(partNumberId);
        }
        
        public int AddPreferredName(int materialId, string vendorGroupId, string name) {
            return base.Channel.AddPreferredName(materialId, vendorGroupId, name);
        }
        
        public bool UpdatePreferredName(int preferredNameId, string preferredName) {
            return base.Channel.UpdatePreferredName(preferredNameId, preferredName);
        }
        
        public bool RemovePreferredName(int preferredNameId) {
            return base.Channel.RemovePreferredName(preferredNameId);
        }
        
        public int UpdatePartNumberPreferredNamesReference(int partNumberId, int[] preferredNameIds) {
            return base.Channel.UpdatePartNumberPreferredNamesReference(partNumberId, preferredNameIds);
        }
        
        public int UpdatePreferredNamePartNumbersReference(int preferredNameId, int[] partNumberIds) {
            return base.Channel.UpdatePreferredNamePartNumbersReference(preferredNameId, partNumberIds);
        }
        
        public bool RemovePartNumberPreferredNameReference(int partNumberId, int preferredNameId) {
            return base.Channel.RemovePartNumberPreferredNameReference(partNumberId, preferredNameId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo GetGeneralPrefSupplier() {
            return base.Channel.GetGeneralPrefSupplier();
        }
        
        public int SetGeneralPrefSupplier(string nid) {
            return base.Channel.SetGeneralPrefSupplier(nid);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetMaterialPrefSuppliers(long materialId) {
            return base.Channel.GetMaterialPrefSuppliers(materialId);
        }
        
        public int AddMaterialPrefSuppliers(long materialId, long[] supplierIds) {
            return base.Channel.AddMaterialPrefSuppliers(materialId, supplierIds);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo[] GetSupplierNameAutocomplete(string supplierName, string materialId, int count) {
            return base.Channel.GetSupplierNameAutocomplete(supplierName, materialId, count);
        }
        
        public long AddEditUserVendor(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplierInfo) {
            return base.Channel.AddEditUserVendor(supplierInfo);
        }
        
        public long AddEditPrefSupplier(ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo supplierInfo) {
            return base.Channel.AddEditPrefSupplier(supplierInfo);
        }
        
        public int DeleteUserDefinedVendor(long nid) {
            return base.Channel.DeleteUserDefinedVendor(nid);
        }
        
        public int DeletePrefSupplier(long supplierId) {
            return base.Channel.DeletePrefSupplier(supplierId);
        }
        
        public ChemSW.Nbt.ChemWatchMaterialServices.SupplierInfo GetVendorByNid(long nid) {
            return base.Channel.GetVendorByNid(nid);
        }
    }
}
