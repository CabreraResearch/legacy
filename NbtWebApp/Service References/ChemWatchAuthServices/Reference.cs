//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NbtWebApp.ChemWatchAuthServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredential", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserCredential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.LoginType LoginTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public NbtWebApp.ChemWatchAuthServices.LoginType LoginType {
            get {
                return this.LoginTypeField;
            }
            set {
                if ((this.LoginTypeField.Equals(value) != true)) {
                    this.LoginTypeField = value;
                    this.RaisePropertyChanged("LoginType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginType", Namespace="")]
    public enum LoginType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChemwatchInternal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleSignOn = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralResponseOfAuthenticationResponse", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GeneralResponseOfAuthenticationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.AuthenticationResponse ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessageCode {
            get {
                return this.ErrorMessageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageCodeField, value) != true)) {
                    this.ErrorMessageCodeField = value;
                    this.RaisePropertyChanged("ErrorMessageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.AuthenticationResponse Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResponse", Namespace="")]
    [System.SerializableAttribute()]
    public partial class AuthenticationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AuthenUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountUnsuccessfulLoginsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DomainPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAutoLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGlobalRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RolePermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedSkinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedProducts {
            get {
                return this.AssignedProductsField;
            }
            set {
                if ((this.AssignedProductsField.Equals(value) != true)) {
                    this.AssignedProductsField = value;
                    this.RaisePropertyChanged("AssignedProducts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuthenUserId {
            get {
                return this.AuthenUserIdField;
            }
            set {
                if ((this.AuthenUserIdField.Equals(value) != true)) {
                    this.AuthenUserIdField = value;
                    this.RaisePropertyChanged("AuthenUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountUnsuccessfulLogins {
            get {
                return this.CountUnsuccessfulLoginsField;
            }
            set {
                if ((this.CountUnsuccessfulLoginsField.Equals(value) != true)) {
                    this.CountUnsuccessfulLoginsField = value;
                    this.RaisePropertyChanged("CountUnsuccessfulLogins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DomainPermissions {
            get {
                return this.DomainPermissionsField;
            }
            set {
                if ((this.DomainPermissionsField.Equals(value) != true)) {
                    this.DomainPermissionsField = value;
                    this.RaisePropertyChanged("DomainPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirePassword {
            get {
                return this.ExpirePasswordField;
            }
            set {
                if ((this.ExpirePasswordField.Equals(value) != true)) {
                    this.ExpirePasswordField = value;
                    this.RaisePropertyChanged("ExpirePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAutoLogin {
            get {
                return this.IsAutoLoginField;
            }
            set {
                if ((this.IsAutoLoginField.Equals(value) != true)) {
                    this.IsAutoLoginField = value;
                    this.RaisePropertyChanged("IsAutoLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGlobalRole {
            get {
                return this.IsGlobalRoleField;
            }
            set {
                if ((this.IsGlobalRoleField.Equals(value) != true)) {
                    this.IsGlobalRoleField = value;
                    this.RaisePropertyChanged("IsGlobalRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RolePermissions {
            get {
                return this.RolePermissionsField;
            }
            set {
                if ((this.RolePermissionsField.Equals(value) != true)) {
                    this.RolePermissionsField = value;
                    this.RaisePropertyChanged("RolePermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedSkinId {
            get {
                return this.SelectedSkinIdField;
            }
            set {
                if ((this.SelectedSkinIdField.Equals(value) != true)) {
                    this.SelectedSkinIdField = value;
                    this.RaisePropertyChanged("SelectedSkinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPermissions", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.FolderPermission DomainPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.Permission RolePermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.FolderPermission DomainPermissions {
            get {
                return this.DomainPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainPermissionsField, value) != true)) {
                    this.DomainPermissionsField = value;
                    this.RaisePropertyChanged("DomainPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.Permission RolePermissions {
            get {
                return this.RolePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RolePermissionsField, value) != true)) {
                    this.RolePermissionsField = value;
                    this.RaisePropertyChanged("RolePermissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderPermission", Namespace="")]
    [System.SerializableAttribute()]
    public partial class FolderPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="")]
    [System.SerializableAttribute()]
    public partial class Permission : NbtWebApp.ChemWatchAuthServices.BaseNamedEntityOflong {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityOflong", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NbtWebApp.ChemWatchAuthServices.UserSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NbtWebApp.ChemWatchAuthServices.BaseNamedEntityOflong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NbtWebApp.ChemWatchAuthServices.Permission))]
    public partial class BaseEntityOflong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSetting", Namespace="")]
    [System.SerializableAttribute()]
    public partial class UserSetting : NbtWebApp.ChemWatchAuthServices.BaseEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DomainIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> SettingGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SettingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DomainId {
            get {
                return this.DomainIdField;
            }
            set {
                if ((this.DomainIdField.Equals(value) != true)) {
                    this.DomainIdField = value;
                    this.RaisePropertyChanged("DomainId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> SettingGroupId {
            get {
                return this.SettingGroupIdField;
            }
            set {
                if ((this.SettingGroupIdField.Equals(value) != true)) {
                    this.SettingGroupIdField = value;
                    this.RaisePropertyChanged("SettingGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingGroupName {
            get {
                return this.SettingGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingGroupNameField, value) != true)) {
                    this.SettingGroupNameField = value;
                    this.RaisePropertyChanged("SettingGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SettingId {
            get {
                return this.SettingIdField;
            }
            set {
                if ((this.SettingIdField.Equals(value) != true)) {
                    this.SettingIdField = value;
                    this.RaisePropertyChanged("SettingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingName {
            get {
                return this.SettingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingNameField, value) != true)) {
                    this.SettingNameField = value;
                    this.RaisePropertyChanged("SettingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseNamedEntityOflong", Namespace="")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NbtWebApp.ChemWatchAuthServices.Permission))]
    public partial class BaseNamedEntityOflong : NbtWebApp.ChemWatchAuthServices.BaseEntityOflong {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentUserResponse", Namespace="")]
    [System.SerializableAttribute()]
    public partial class CurrentUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.GetPermissionsResponse PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.UserSettings UserSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.GetPermissionsResponse Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.UserSettings UserSettings {
            get {
                return this.UserSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSettingsField, value) != true)) {
                    this.UserSettingsField = value;
                    this.RaisePropertyChanged("UserSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPermissionsResponse", Namespace="")]
    [System.SerializableAttribute()]
    public partial class GetPermissionsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.ListResultOfPermission DomainPermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.ListResultOfPermission RolePermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.ListResultOfPermission DomainPermissions {
            get {
                return this.DomainPermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainPermissionsField, value) != true)) {
                    this.DomainPermissionsField = value;
                    this.RaisePropertyChanged("DomainPermissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.ListResultOfPermission RolePermissions {
            get {
                return this.RolePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RolePermissionsField, value) != true)) {
                    this.RolePermissionsField = value;
                    this.RaisePropertyChanged("RolePermissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserSettings", Namespace="", ItemName="UserSetting")]
    [System.SerializableAttribute()]
    public class UserSettings : System.Collections.Generic.List<NbtWebApp.ChemWatchAuthServices.UserSetting> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListResultOfPermission", Namespace="")]
    [System.SerializableAttribute()]
    public partial class ListResultOfPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NbtWebApp.ChemWatchAuthServices.Permission[] RowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExact {
            get {
                return this.IsExactField;
            }
            set {
                if ((this.IsExactField.Equals(value) != true)) {
                    this.IsExactField = value;
                    this.RaisePropertyChanged("IsExact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber {
            get {
                return this.PageNumberField;
            }
            set {
                if ((this.PageNumberField.Equals(value) != true)) {
                    this.PageNumberField = value;
                    this.RaisePropertyChanged("PageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowCount {
            get {
                return this.RowCountField;
            }
            set {
                if ((this.RowCountField.Equals(value) != true)) {
                    this.RowCountField = value;
                    this.RaisePropertyChanged("RowCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NbtWebApp.ChemWatchAuthServices.Permission[] Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ChemWatchAuthServices.IAuthenticateService")]
    public interface IAuthenticateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/Authenticate", ReplyAction="urn:IAuthenticateService/AuthenticateResponse")]
        NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate(NbtWebApp.ChemWatchAuthServices.UserCredential credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/Authenticate_New", ReplyAction="urn:IAuthenticateService/Authenticate_NewResponse")]
        NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate_New(NbtWebApp.ChemWatchAuthServices.UserCredential credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/Authenticate2", ReplyAction="urn:IAuthenticateService/Authenticate2Response")]
        NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate2(NbtWebApp.ChemWatchAuthServices.UserCredential credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/GetUserRights", ReplyAction="urn:IAuthenticateService/GetUserRightsResponse")]
        NbtWebApp.ChemWatchAuthServices.UserPermissions GetUserRights();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/LoginUserByIp", ReplyAction="urn:IAuthenticateService/LoginUserByIpResponse")]
        NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse LoginUserByIp(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/GetCurrentUser", ReplyAction="urn:IAuthenticateService/GetCurrentUserResponse")]
        NbtWebApp.ChemWatchAuthServices.CurrentUserResponse GetCurrentUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IAuthenticateService/OutbackLogin", ReplyAction="urn:IAuthenticateService/OutbackLoginResponse")]
        NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse OutbackLogin(string domainName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticateServiceChannel : NbtWebApp.ChemWatchAuthServices.IAuthenticateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateServiceClient : System.ServiceModel.ClientBase<NbtWebApp.ChemWatchAuthServices.IAuthenticateService>, NbtWebApp.ChemWatchAuthServices.IAuthenticateService {
        
        public AuthenticateServiceClient() {
        }
        
        public AuthenticateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate(NbtWebApp.ChemWatchAuthServices.UserCredential credential) {
            return base.Channel.Authenticate(credential);
        }
        
        public NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate_New(NbtWebApp.ChemWatchAuthServices.UserCredential credential) {
            return base.Channel.Authenticate_New(credential);
        }
        
        public NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse Authenticate2(NbtWebApp.ChemWatchAuthServices.UserCredential credential) {
            return base.Channel.Authenticate2(credential);
        }
        
        public NbtWebApp.ChemWatchAuthServices.UserPermissions GetUserRights() {
            return base.Channel.GetUserRights();
        }
        
        public NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse LoginUserByIp(string ip) {
            return base.Channel.LoginUserByIp(ip);
        }
        
        public NbtWebApp.ChemWatchAuthServices.CurrentUserResponse GetCurrentUser() {
            return base.Channel.GetCurrentUser();
        }
        
        public NbtWebApp.ChemWatchAuthServices.GeneralResponseOfAuthenticationResponse OutbackLogin(string domainName) {
            return base.Channel.OutbackLogin(domainName);
        }
    }
}
